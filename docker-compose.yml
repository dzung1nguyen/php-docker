version: '3'

# https://stackoverflow.com/questions/45915182/docker-compose-sharing-container-between-multiple-projects-by-using-the-same-co
# Create a network if not exists: docker network create common_network
networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge
  common_network:
    external: true

volumes:
  mysql:
    driver: ${VOLUMES_DRIVER}
  postgres:
    driver: ${VOLUMES_DRIVER}
  redis:
    driver: ${VOLUMES_DRIVER}
  docker-in-docker:
    driver: ${VOLUMES_DRIVER}

services: 
  
### app ###########################################
  app:
    build: 
      context: ./app
      args:
        - INSTALL_NODE=${INSTALL_NODE}
        - NODE_VERSION=${NODE_VERSION}
        - INSTALL_NPM_VUE_CLI=${INSTALL_NPM_VUE_CLI}
        - INSTALL_NPM_ANGULAR_CLI=${INSTALL_NPM_ANGULAR_CLI}
        - INSTALL_YARN=${INSTALL_YARN}
        - YARN_VERSION=${YARN_VERSION}
        - PUID=${APP_PUID}
        - PGID=${APP_PGID}
    container_name: app
    volumes: 
      - ${LOCAL_PATH}:${DOCKER_PATH}
    networks: 
      - backend
    ports:
      - "9527:9527"
      - "8080:8080"
    links:
      - docker-in-docker

### nginx ###########################################
  nginx:
    build: 
      context: ./nginx
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ${LOCAL_PATH}:${DOCKER_PATH}
      - ./nginx/sites/:/etc/nginx/sites-available
      - ./nginx/conf.d/:/etc/nginx/conf.d
      - ./nginx/ssl/:/etc/nginx/ssl
    depends_on:
      - php74-fpm
    networks:
      - frontend
      - backend

### mysql ###########################################
  mysql:
    build:
      context: ./mysql
      args:
        - MYSQL_VERSION=${MYSQL_VERSION}
    container_name: mysql
    tty: true
    ports: 
      - "3306:3306"
    volumes: 
      - ${LOCAL_DATA_PATH}/mysql:/var/lib/mysql
      - ./mysql/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    networks: 
      - backend
      - common_network

### php74-fpm ###########################################
  php74-fpm:
    build: 
      context: ./php74-fpm
      args:
        - docker-in-docker:/certs/client
    container_name: laravel_php74-fpm
    volumes: 
      - ./php74-fpm/php7.4.ini:/usr/local/etc/php/php.ini
      - ${LOCAL_PATH}:${DOCKER_PATH}
    ports: 
      - "9000:9000"
    networks: 
      - backend
    links:
      - docker-in-docker

### php8.0-fpm ###########################################
  php80-fpm:
    build: 
      context: ./php80-fpm
      args:
        - docker-in-docker:/certs/client
    container_name: laravel_php8
    volumes: 
      - ./php80-fpm/php8.0.ini:/usr/local/etc/php/php.ini
      - ${LOCAL_PATH}:${DOCKER_PATH}
    ports: 
      - "9001:9000"
    networks: 
      - backend
    links:
        - docker-in-docker

## PHP Worker ############################################
  php-worker:
    build:
      context: ./php-worker
    container_name: php_worker
    volumes:
      - ${LOCAL_PATH}:${DOCKER_PATH}
      - ./php-worker/conf.d:/etc/supervisor/conf.d
      - ./php-worker/logs:/var/log/supervisor
    ports:
      - 9009:9009
    extra_hosts:
      - "dockerhost:${DOCKER_HOST_IP}"
    networks:
      - backend

### PostgreSQL ###########################################
  postgres:
    build:
      context: ./postgres
      args:
        - POSTGRES_VERSION=${POSTGRES_VERSION}
    container_name: postgres
    volumes:
      - ${LOCAL_PATH}/postgres:/var/lib/postgresql/data
      - ${POSTGRES_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
    ports:
      - "${POSTGRES_PORT}:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - backend
      - common_network

### redis ###########################################
  redis:
    build:
      context: ./redis
      args:
        - REDIS_VERSION=${REDIS_VERSION}
    volumes:
      - ${LOCAL_DATA_PATH}/redis:/data
    container_name: redis
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - backend
      - common_network

### Docker-in-Docker ################################################
  docker-in-docker:
    image: docker:dind
    privileged: true
    volumes:
      - ${LOCAL_PATH}:${DOCKER_PATH}
      - ${LOCAL_DATA_PATH}/dind:/var/lib/docker
    expose:
      - 2375
    networks:
      - backend
