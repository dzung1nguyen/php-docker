version: '3'

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

volumes:
  mysql:
    driver: ${VOLUMES_DRIVER}

services:

### nginx ###########################################
  nginx:
    build:
      context: ./nginx
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ${LOCAL_PATH}:${DOCKER_PATH}
      - ./nginx/sites/:/etc/nginx/sites-available
      - ./nginx/conf.d/:/etc/nginx/conf.d
      - ./nginx/ssl/:/etc/nginx/ssl
    depends_on:
      - php
    networks:
      - backend
    restart: "no"

### php ###########################################
  php:
    build:
      context: ./php
    container_name: php
    volumes:
      - ./php/php8.1.ini:/usr/local/etc/php/php.ini
      - ${LOCAL_PATH}:${DOCKER_PATH}
    ports:
      - "9000:9000"
      - "9090:9090"
    networks:
      - backend
    restart: "no"

### mysql ###########################################
  mysql:
    build:
      context: ./mysql
      args:
        - MYSQL_VERSION=${MYSQL_VERSION}
    container_name: mysql
    tty: true
    ports:
      - "3306:3306"
    volumes:
      - ${LOCAL_DATA_PATH}/mysql:/var/lib/mysql
      - ./mysql/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    networks:
      - backend

### PostgreSQL ###########################################
  postgres:
    build:
      context: ./postgres
      args:
        - POSTGRES_VERSION=${POSTGRES_VERSION}
    container_name: postgres
    volumes:
      - ${LOCAL_DATA_PATH}/postgres:/var/lib/postgresql/data
      - ${POSTGRES_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
    ports:
      - "${POSTGRES_PORT}:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - backend
